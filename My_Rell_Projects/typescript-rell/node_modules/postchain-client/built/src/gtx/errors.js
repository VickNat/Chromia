export class UnexpectedArgumentTypeError extends Error {
    constructor(typedArg) {
        super(`Cannot parse typedArg ${JSON.stringify(typedArg)}. Unknown type ${typedArg.type}`);
    }
}
export class MissingGtxException extends Error {
    constructor() {
        super(`Missing instance of gtx protocol (used for communicating with postchain) to add operation to`);
    }
}
export class AlreadySignedTransactionException extends Error {
    constructor(operation) {
        super(`Cannot add ${operation} calls to an already signed gtx`);
    }
}
export class NumberOfSignersAndSignaturesException extends Error {
    constructor() {
        super(`Not matching number of signers and signatures`);
    }
}
export class MissingSignerException extends Error {
    constructor() {
        super(`No such signer, remember to add signer to transaction before adding a signature`);
    }
}
//# sourceMappingURL=errors.js.map